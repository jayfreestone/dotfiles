setopt null_glob

source /usr/local/share/antigen/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

if [[ "$OSTYPE" == "darwin"* ]]; then
  antigen bundle osx

  # Required for z to work
  source `brew --prefix`/etc/profile.d/z.sh
fi

antigen bundle git
antigen bundle yarn
antigen bundle docker
antigen bundle docker-compose
antigen bundle gitfast
antigen bundle Seinh/git-prune
antigen bundle atweiden/fzf-extras
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-completions

# Load the theme.
antigen theme https://github.com/dracula/zsh

# Tell Antigen that you're done.
antigen apply

autoload -U compinit compdef
compinit

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# prefer nvim as $EDITOR
if which nvim > /dev/null; then
  export EDITOR=nvim
  alias vi=nvim
  alias vim=nvim
else
  export EDITOR=vim
  alias nvim=vim
fi
export GIT_EDITOR=$EDITOR
export VISUAL=$EDITOR

# Set GUI editor
export GUI_EDITOR="IntelliJ\ IDEA\ Ultimate"

# ruby (rvm)
if which rbenv > /dev/null; then
  eval "$(rbenv init -)"
fi

# Vi mode
bindkey -v '^?' backward-delete-char

# Aliases
alias ls='ls -Glah'
alias mkdir='mkdir -pv'
alias grd='cd $(git rev-parse --show-toplevel)'
## Docker
alias dc='docker-compose'
compdef dc='docker-compose'
## Git

# fco - checkout git branch
fbr() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# fcoc - checkout git commit
fcoc() {
  local commits commit
  commits=$(git log --pretty=oneline --abbrev-commit --reverse) &&
  commit=$(echo "$commits" | fzf --tac +s +m -e) &&
  git checkout $(echo "$commit" | sed "s/ .*//")
}

# Reset changes on a specific file
grf() {
  git ls-files -m -o --exclude-standard | fzf -m --print0 | xargs -0 -o -t git checkout
}

# fzf setup
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [ -f ~/.fzf.zsh ]; then
  export FZF_DEFAULT_OPTS=--inline-info
  export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!{.git,node_modules}/*"'
  # To apply the command to CTRL-T as well
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  source ~/.fzf.zsh
  # Re-bind to match most modern editors
  bindkey '\C-p' fzf-file-widget
  # MacOS doesn't use Alt in terminal, so re-bind
  bindkey '\C-o' fzf-cd-widget
fi

if which direnv > /dev/null; then
  # Set up direnv
  eval "$(direnv hook zsh)"
fi

zet() {
  nvim "+Zet $*"
}

zet-tags() {
  rg '(?:^| )(#\w([\w|-])*)' -o -I  ~/zettelkasten | sort | uniq
}

# Load in custom configs
for file in ~/dotfiles/zsh/conf.d/*.zsh.inc; do
  source "$file"
done
